
<MudDialog>
    <DialogContent>
        <MudSelect 
            @bind-Value="_selectedTagGroupType" 
            Label="TagGroupType" 
            AnchorOrigin="Origin.BottomCenter" 
            Placeholder="Hello World"
            Variant="Variant.Outlined">
            @foreach (var groupType in TagGroupTypes.ToList())
            {
                <MudSelectItem Value="groupType" Disabled="@(groupType == PlcTagGroup.TagType.None)">@(groupType is PlcTagGroup.TagType.None ? string.Empty : groupType.ToString())</MudSelectItem>
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    MudDialogInstance? MudDialog { get; set; }

    // make a list of enum values that have already been used, so we can filter them out
    [Parameter]
    public List<PlcTagGroup.TagType>? UsedTagGroupTypes { get; set; }

    private PlcTagGroup.TagType _selectedTagGroupType = PlcTagGroup.TagType.None;
    private List<PlcTagGroup.TagType> TagGroupTypes { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

    // filter out the used tag group types
        TagGroupTypes = Enum.GetValues(typeof(PlcTagGroup.TagType)).Cast<PlcTagGroup.TagType>().Where(x => !UsedTagGroupTypes!.Contains(x)).ToList();
    }


    void Submit() => MudDialog?.Close(DialogResult.Ok(_selectedTagGroupType));
    void Cancel() => MudDialog?.Cancel();
}