// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlcTagLibrary.Data;

#nullable disable

namespace LoadTapChanger.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("PlcTagLibrary.Models.MicrologixPlc", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("TagID");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlcType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("INTEGER");

                    b.Property<int>("Protocol")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Timeout")
                        .HasColumnType("TEXT");

                    b.HasKey("Name", "Id");

                    b.ToTable("MicrologixPlc", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "Micrologix1100",
                            Id = 1,
                            Gateway = "192.168.0.23",
                            Path = "1,0",
                            PlcType = 2,
                            Protocol = 0,
                            Timeout = new TimeSpan(0, 0, 0, 5, 0)
                        });
                });

            modelBuilder.Entity("PlcTagLibrary.Models.MicrologixTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("PlcId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PlcID");

                    b.Property<string>("CustomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("LookupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<int>("TagType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Value")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Value");

                    b.HasKey("Id", "PlcId");

                    b.ToTable("MicrologixTag", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlcId = 1,
                            CustomName = "Output-1",
                            LookupName = "O0:0/1",
                            TagType = 0,
                            Value = 0
                        },
                        new
                        {
                            Id = 2,
                            PlcId = 1,
                            CustomName = "Input-1",
                            LookupName = "I1:0/1",
                            TagType = 1,
                            Value = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
